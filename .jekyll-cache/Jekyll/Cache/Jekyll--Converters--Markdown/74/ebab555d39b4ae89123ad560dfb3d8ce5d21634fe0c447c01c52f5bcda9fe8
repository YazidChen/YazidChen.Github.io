I"e4<h1 id="tomcat-security-for-ubuntu1604">Tomcat Security For Ubuntu16.04</h1>

<h2 id="一权限">一、权限</h2>

<h3 id="11-创建tomcat用户">1.1 创建tomcat用户</h3>

<p>为了提高系统安全，tomcat不应该使用root运行。为它创建一个新用户和组。
创建一个tomcat组：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>groupadd tomcat
</code></pre></div></div>

<p>创建一个叫tomcat的用户：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>useradd <span class="nt">-s</span> /bin/false <span class="nt">-g</span> tomcat <span class="nt">-d</span> /opt/tomcat tomcat
</code></pre></div></div>

<p>tomcat用户属于tomcat组，家目录是<code class="highlighter-rouge">/opt/tomcat</code>，我要把tomcat安装在这个目录。<code class="highlighter-rouge">/bin/false</code>代表这个用户是不能登录的。</p>

<h3 id="12-更改权限">1.2 更改权限</h3>

<p>赋给tomcat用户各种权限：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /opt
<span class="nb">sudo chgrp</span> <span class="nt">-R</span> tomcat tomcat

<span class="nb">cd</span> /opt/tomcat
<span class="nb">sudo chgrp</span> <span class="nt">-R</span> tomcat conf
<span class="nb">sudo chmod </span>g+rwx conf
<span class="nb">sudo chmod </span>g+r conf/<span class="k">*</span>
</code></pre></div></div>

<p>修改各种目录的所有者：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /opt
<span class="nb">sudo chown</span> <span class="nt">-R</span> tomcat tomcat

<span class="nb">cd</span> /opt/tomcat
<span class="nb">sudo chown</span> <span class="nt">-R</span> tomcat webapps/ work/ temp/ logs/ bin/ lib/
</code></pre></div></div>

<h3 id="13-配置定时登出">1.3 配置定时登出</h3>

<p>如果使用启用了Tomcat用户，则需要设置Tomcat定时登出，将<code class="highlighter-rouge">$CATALINA_HOME\conf\server.xml</code>配置如下：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;Connector</span> <span class="na">port=</span><span class="s">"8080"</span> <span class="na">protocol=</span><span class="s">"HTTP/1.1"</span>
           <span class="na">connectionTimeout=</span><span class="s">"20000"</span>
           <span class="na">redirectPort=</span><span class="s">"8443"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>

<h2 id="二配置开机启动">二、配置开机启动</h2>

<p>我们需要把tomcat配置为服务，为了做到这一点，需要创建systemd服务配置文件。</p>

<p>使用下面命令查看Java安装路径：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>update-java-alternatives <span class="nt">-l</span>
</code></pre></div></div>

<p>现在在<code class="highlighter-rouge">/etc/systemd/system</code>目录创建服务文件tomcat.service：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>vim /etc/systemd/system/tomcat.service
</code></pre></div></div>

<p>tomcat.service内容如下：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Unit]
<span class="nv">Description</span><span class="o">=</span>Apache Tomcat Web Application Container
<span class="nv">After</span><span class="o">=</span>network.target
 
<span class="o">[</span>Service]
<span class="nv">Type</span><span class="o">=</span>forking
 
<span class="nv">Environment</span><span class="o">=</span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre
<span class="nv">Environment</span><span class="o">=</span><span class="nv">CATALINA_PID</span><span class="o">=</span>/opt/tomcat/temp/tomcat.pid
<span class="nv">Environment</span><span class="o">=</span><span class="nv">CATALINA_HOME</span><span class="o">=</span>/opt/tomcat
<span class="nv">Environment</span><span class="o">=</span><span class="nv">CATALINA_BASE</span><span class="o">=</span>/opt/tomcat
<span class="nv">Environment</span><span class="o">=</span><span class="s1">'CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'</span>
<span class="nv">Environment</span><span class="o">=</span><span class="s1">'JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'</span>
 
<span class="nv">ExecStart</span><span class="o">=</span>/opt/tomcat/bin/startup.sh
<span class="nv">ExecStop</span><span class="o">=</span>/opt/tomcat/bin/shutdown.sh
 
<span class="nv">User</span><span class="o">=</span>tomcat
<span class="nv">Group</span><span class="o">=</span>tomcat
 
<span class="o">[</span>Install]
<span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</code></pre></div></div>

<p>替换JAVA_HOME的值，注意在路径后加jre；上面配置内存要根据需要修改。</p>

<p>修改完成之后，重新加载systemd：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl daemon-reload
</code></pre></div></div>

<p>启动tomcat：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl <span class="nb">enable </span>tomcat
<span class="nb">sudo </span>systemctl start tomcat
</code></pre></div></div>

<p>确认tomcat启动状态：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status tomcat
</code></pre></div></div>

<h2 id="三安全加固配置">三、安全加固配置</h2>

<h3 id="31-删除应用包">3.1 删除应用包</h3>

<p>除了需要部署上去的应用，其余位于<code class="highlighter-rouge">$CATALINA_HOME\webapps</code>文件夹中的应用如docs、examples、host-manager、manager和ROOT，若无业务必要，请执行删除上述的应用包。</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">rm</span> <span class="nt">-rf</span> docs/ examples/ host-manager/ manager/ ROOT/
</code></pre></div></div>

<h3 id="32-禁止tomcat目录列表">3.2 禁止Tomcat目录列表</h3>

<p>确保<code class="highlighter-rouge">$CATALINA_HOME\conf\web.xml</code>中listings的值为false：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;init-param&gt;</span>
    <span class="nt">&lt;param-name&gt;</span>listings<span class="nt">&lt;/param-name&gt;</span>
    <span class="nt">&lt;param-value&gt;</span>false<span class="nt">&lt;/param-value&gt;</span>
<span class="nt">&lt;/init-param&gt;</span>
</code></pre></div></div>

<h3 id="33-设置cookie的httponly属性">3.3 设置Cookie的HttpOnly属性</h3>

<p>如果您在cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XSS攻击。</p>

<p>在<code class="highlighter-rouge">$CATALINA_HOME\conf\context.xml</code>文件中添加<code class="highlighter-rouge">useHttpOnly="true"</code>配置如下：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;Context</span> <span class="na">useHttpOnly=</span><span class="s">"true"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;WatchedResource&gt;</span>WEB-INF/web.xml<span class="nt">&lt;/WatchedResource&gt;</span>
    <span class="nt">&lt;WatchedResource&gt;</span>${catalina.base}/conf/web.xml<span class="nt">&lt;/WatchedResource&gt;</span>
<span class="nt">&lt;/Context&gt;</span>
</code></pre></div></div>

<p>进入项目路径找到web.xml：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@yazid-chen:/opt/tomcat/webapps/api/WEB-INF# vim web.xml 
</code></pre></div></div>

<p>加入http-only配置：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;session-config&gt;</span>
      <span class="nt">&lt;session-timeout&gt;</span>30<span class="nt">&lt;/session-timeout&gt;</span>
      <span class="nt">&lt;cookie-config&gt;</span>
            <span class="nt">&lt;http-only&gt;</span>true<span class="nt">&lt;/http-only&gt;</span>
            <span class="nt">&lt;secure&gt;</span>true<span class="nt">&lt;/secure&gt;</span>
      <span class="nt">&lt;/cookie-config&gt;</span>
<span class="nt">&lt;/session-config&gt;</span>
</code></pre></div></div>

<h3 id="34-配置shutdown端口">3.4 配置shutdown端口</h3>

<p>在<code class="highlighter-rouge">$CATALINA_HOME\conf\server.xml</code>中有<code class="highlighter-rouge">“&lt;Server port="8005" shutdown="SHUTDOWN"&gt;”</code>的配置。</p>

<p>任何人只要telnet到服务器的8005端口，输入”SHUTDOWN”，然后回车，服务器立即就被关掉了。</p>

<p>从安全的角度上考虑，需要把这个shutdown指令改成一个别人不容易猜测的字符串。而且这个修改不影响shutdown.bat或shutdown.sh的执行。</p>

<p>配置如下：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#注：配置的端口需要大于1024。
<span class="nt">&lt;Serverport</span><span class="err">="未被占用的端口"</span> <span class="na">shutdown=</span><span class="s">"较为复杂的字符串"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h3 id="35-隐藏tomcat版本信息">3.5 隐藏Tomcat版本信息</h3>

<p>在默认配置下，当应用出现异常时，客户端会显示Tomcat的版本信息。攻击者可以根据Tomcat版本信息选择漏洞库攻击，所以需要将Tomcat的版本信息隐藏，解压<code class="highlighter-rouge">$CATALINA_HOME\lib\catalina.jar</code>：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@yazid-chen:/opt/tomcat/lib# jar xf catalina.jar 
</code></pre></div></div>

<p>将<code class="highlighter-rouge">\org\apache\catalina\util</code>中的配置ServerInfo.properties如下,info和number随意：</p>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="py">server.info</span><span class="p">=</span><span class="s">Server</span>
<span class="py">server.number</span><span class="p">=</span><span class="s">Y</span>
<span class="py">server.built</span><span class="p">=</span><span class="s">Jul 4 2016 18:22:47 UTC</span>
</code></pre></div></div>

<h3 id="36-关闭war自动部署">3.6 关闭war自动部署</h3>

<p>默认的配置war放在<code class="highlighter-rouge">$CATALINA_HOME\webapps</code>中会自动部署，所以关闭war自动部署防止被植入木马等恶意程序。将<code class="highlighter-rouge">$CATALINA_HOME\conf\server.xml</code>配置如下：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;Host</span> <span class="na">name=</span><span class="s">"localhost"</span>  <span class="na">appBase=</span><span class="s">"webapps"</span>
      <span class="na">unpackWARs=</span><span class="s">"false"</span> <span class="na">autoDeploy=</span><span class="s">"false"</span><span class="nt">&gt;</span>

</code></pre></div></div>

<h3 id="37-管理ajp端口">3.7 管理AJP端口</h3>

<p>AJP是为 Tomcat 与 HTTP 服务器之间通信而定制的协议，能提供较高的通信速度和效率。如果tomcat前端放的是apache的时候，会使用到AJP这个连接器。如果用nginx做的反向代理，因此不使用此连接器，因此需要注销掉该连接器。</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--
    &lt;Connector port="8009" protocol="AJP/1.3" redirectPort="8443" /&gt;
--&gt;</span>
</code></pre></div></div>

<h3 id="38-用普通用户启动tomcat">3.8 用普通用户启动Tomcat</h3>

<p>用root用户启动tomcat有一个严重的问题，那就是tomcat具有root权限。这意味着你的任何一个jsp脚本都具有root权限，所以可以轻易地用jsp脚本删除你整个硬盘里的东西！所以我们最好不要使用root启动tomcat。</p>

<p>权限修改见上文1.2所示。</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#查看由哪个用户启动</span>
ps aux | <span class="nb">grep </span>tomcat 
</code></pre></div></div>

<h2 id="参考">参考</h2>

<p>本文参考以下文章，在此对原作者表示感谢！</p>

<p><a href="http://blog.topspeedsnail.com/archives/4551">Ubuntu 16.04安装Tomcat 8</a></p>

<p><a href="http://www.51itong.net/tomcat-4687.html">Tomcat安全加固配置手册</a></p>

<p><a href="http://www.tuicool.com/articles/BRF732f">Tomcat 安全配置与性能优化</a></p>

:ET