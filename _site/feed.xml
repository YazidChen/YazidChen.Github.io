<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="yazidchen.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="yazidchen.github.io/" rel="alternate" type="text/html" /><updated>2016-10-09T08:19:16+00:00</updated><id>yazidchen.github.io/</id><title>YazidChen Blog</title><subtitle>不归路，因兴趣而铺</subtitle><author><name>YazidChen</name></author><entry><title>以Log4j切分Tomcat日志</title><link href="yazidchen.github.io/2016/10/09/CutTomcatLogByLog4j/" rel="alternate" type="text/html" title="以Log4j切分Tomcat日志" /><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><id>yazidchen.github.io/2016/10/09/CutTomcatLogByLog4j</id><content type="html" xml:base="yazidchen.github.io/2016/10/09/CutTomcatLogByLog4j/">&lt;h1 id=&quot;log4jproperties&quot;&gt;一、Log4j.properties解析&lt;/h1&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 根日志的级别定义为 DEBUG，并将名为 CATALINA 的 appender 添加其上。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.rootLogger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DEBUG, CATALINA&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 将名为 CATALINA 的 appender 设置为DailyRollingFileAppender。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;org.apache.Log4j.DailyRollingFileAppender&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 他将日志写入 log 目录下一个名为 log.out 的文件中。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;${log}/log.out&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 该标志位默认为 true，意味着每次日志追加操作都将输出流刷新至文件。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.ImmediateFlush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 设置appender 对象的阀值。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.Threshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;debug&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 该值默认为 true，其含义是让日志追加至文件末尾。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 设置回滚规则，在此我们设置为每分钟回滚方便测试。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.DatePattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.'&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;yyyy-MM-dd-HH-mm&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 设置 appender CATALINA 的 layout。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;org.apache.Log4j.PatternLayout&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# layout 被定义为 %m%n，即打印出来的日志信息末尾加入换行。
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.layout.conversionPattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%m%n&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;conversionPattern&lt;/code&gt;可以自定义log的格式，相关参数有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;%p 输出优先级，即&lt;code class=&quot;highlighter-rouge&quot;&gt;DEBUG，INFO，WARN，ERROR，FATAL&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;%r 输出自应用启动到输出该log信息耗费的毫秒数。&lt;/li&gt;
  &lt;li&gt;%c 输出所属的类目，通常就是所在类的全名。&lt;/li&gt;
  &lt;li&gt;%t 输出产生该日志事件的线程名。&lt;/li&gt;
  &lt;li&gt;%m 输出代码中指定的消息。&lt;/li&gt;
  &lt;li&gt;%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”。&lt;/li&gt;
  &lt;li&gt;%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：&lt;code class=&quot;highlighter-rouge&quot;&gt;%d{yyyy MMM dd HH:mm:ss,SSS}&lt;/code&gt;，输出类似：2016年10月09日 ：15：41，628。&lt;/li&gt;
  &lt;li&gt;%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。&lt;/li&gt;
  &lt;li&gt;%L 输出当前记录器所在的文件行号，如输出: “51”。&lt;/li&gt;
  &lt;li&gt;%F 输出当前记录器所在的文件名称，如输出: “main.cpp”。&lt;/li&gt;
  &lt;li&gt;%x 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;log4jcatalinaout&quot;&gt;二、使用Log4j接管catalina.out&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;2.1 接管前置准备&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME/bin/&lt;/code&gt;下的&lt;code class=&quot;highlighter-rouge&quot;&gt;catalina.sh&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 1)将下条隐藏。
# touch &quot;$CATALINA_OUT&quot;

# 2)下条有两处需要隐藏。
#  &amp;gt;&amp;gt; &quot;$CATALINA_OUT&quot; 2&amp;gt;&amp;amp;1 &quot;&amp;amp;&quot;

# 3)下条有两处需要修改。
org.apache.catalina.startup.Bootstrap &quot;$@&quot; start \
# 修改为
org.apache.catalina.startup.Bootstrap &quot;$@&quot; start &amp;amp;\

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/syYTpXt.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2、&lt;/strong&gt;重命名&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME/bin/&lt;/code&gt;下的&lt;code class=&quot;highlighter-rouge&quot;&gt;logging.properties&lt;/code&gt;成其他名字，该文件不需要了，建议重命名:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv logging.properties loggin.properties
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;2.2 切分方式&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;2.2.1 按时间切分&lt;/h3&gt;

&lt;p&gt;如需按时段生成日志文件，需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;org.apache.Log4j.DailyRollingFileAppender&lt;/code&gt;，该类继承了&lt;code class=&quot;highlighter-rouge&quot;&gt;FileAppender&lt;/code&gt;类。该类多包涵了一个重要的属性：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DatePattern&lt;/code&gt;：该属性表明什么时间回滚文件，以及文件的命名约定。缺省情况下，在每天午夜回滚文件。
&lt;code class=&quot;highlighter-rouge&quot;&gt;DatePattern&lt;/code&gt;使用如下规则控制回滚计划：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-MM&lt;/code&gt;				在本月末，下月初回滚文件。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-MM-dd	&lt;/code&gt;		在每天午夜回滚文件，这是缺省值。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-MM-dd-a&lt;/code&gt;			在每天中午和午夜回滚文件。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-MM-dd-HH&lt;/code&gt;		在每个整点回滚文件。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-MM-dd-HH-mm&lt;/code&gt;		每分钟回滚文件。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-ww&lt;/code&gt;				根据地域，在每周的第一天回滚。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在项目中添加或修改&lt;code class=&quot;highlighter-rouge&quot;&gt;log4j.properties&lt;/code&gt;文件:&lt;/p&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;log4j.rootLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;INFO, CATALINA&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;org.apache.log4j.DailyRollingFileAppender&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;${catalina.base}/logs/catalina.&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;UTF-8&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 为方便测试，此处设置为每分钟分割一次
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.DatePattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;yyyy-MM-dd-HH-mm'.log'&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.layout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.apache.log4j.PatternLayout&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.CATALINA.layout.ConversionPattern&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c{1}:%L - %m%n&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;log4j.logger.org.springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;DEBUG&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 以下按需要选择
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;log4j.appender.LOCALHOST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;org.apache.log4j.DailyRollingFileAppender&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.LOCALHOST.File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;${catalina.base}/logs/localhost.&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.LOCALHOST.Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.LOCALHOST.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;UTF-8&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.LOCALHOST.DatePattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;yyyy-MM-dd-HH-mm'.log'&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.LOCALHOST.layout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.apache.log4j.PatternLayout&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.LOCALHOST.layout.ConversionPattern&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;%d [%t] %-5p %c- %m%n&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;log4j.appender.MANAGER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;org.apache.log4j.DailyRollingFileAppender&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.MANAGER.File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;${catalina.base}/logs/manager.&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.MANAGER.Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.MANAGER.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;UTF-8&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.MANAGER.DatePattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;yyyy-MM-dd-HH-mm'.log'&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.MANAGER.layout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.apache.log4j.PatternLayout&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log4j.appender.MANAGER.layout.ConversionPattern&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;%d [%t] %-5p %c- %m%n&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;log4j.appender.HOST-&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MANAGER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;org.apache.log4j.DailyRollingFileAppender&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;log4j.appender.HOST-&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MANAGER.File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;${catalina.base}/logs/host-manager.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;log4j.appender.HOST-&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MANAGER.Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;log4j.appender.HOST-&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MANAGER.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;UTF-8&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;log4j.appender.HOST-&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MANAGER.DatePattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;yyyy-MM-dd-HH-mm'.log'&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;log4j.appender.HOST-&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MANAGER.layout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.apache.log4j.PatternLayout&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;log4j.appender.HOST-&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MANAGER.layout.ConversionPattern&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;%d [%t] %-5p %c- %m%n&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 配置哪个loggers属于哪个appenders，按需选择配置
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost]=INFO,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;LOCALHOST&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/manager]=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;INFO,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;MANAGER&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/host-manager]=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;INFO,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;HOST-MANAGER&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;2.2.2 按日志文件大小拆分&lt;/h3&gt;

&lt;p&gt;如需按日志文件大小分割日志，则需要使用 org.apache.Log4j.RollingFileAppender，该类继承了 FileAppender 类，继承了它的所有属性。
该类多包括了以下可配置属性：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;maxFileSize&lt;/code&gt;：这是文件大小的阀值，大于该值时，文件会回滚。该值默认为 10 MB。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;maxBackupIndex&lt;/code&gt;：该值表示备份文件的个数，默认为 1。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对log4j.properties配置引入以下关键项：&lt;/p&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 设置日志文件阀值最大为5MB
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;Log4j.appender.CATALINA.MaxFileSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5MB&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 设置日志文件个数为2
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;Log4j.appender.CATALINA.MaxBackupIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;该示例配置文件展示了每个日志文件最大为 5 MB，如果超过该最大值，则会生成一个新的日志文件。由于 &lt;code class=&quot;highlighter-rouge&quot;&gt;maxBackupIndex&lt;/code&gt; 的值为 2，当第二个文件的大小超过最大值时，会擦去第一个日志文件的内容，所有的日志都回滚至第一个日志文件。&lt;/p&gt;

&lt;h1 id=&quot;section-4&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;本文参考以下文章，在此对原作者表示感谢！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://my.oschina.net/jsan/blog/205669&quot;&gt;Tomcat下使用Log4j 接管 catalina.out 日志文件生成方式&lt;/a&gt;&lt;/p&gt;</content><author><name>YazidChen</name></author><summary>一、Log4j.properties解析</summary></entry><entry><title>Linux环境Tomcat安全配置</title><link href="yazidchen.github.io/2016/09/13/TomcatSecuritySettingOnUbuntu/" rel="alternate" type="text/html" title="Linux环境Tomcat安全配置" /><published>2016-09-13T00:00:00+00:00</published><updated>2016-09-13T00:00:00+00:00</updated><id>yazidchen.github.io/2016/09/13/TomcatSecuritySettingOnUbuntu</id><content type="html" xml:base="yazidchen.github.io/2016/09/13/TomcatSecuritySettingOnUbuntu/">&lt;h1 id=&quot;tomcat-security-for-ubuntu1604&quot;&gt;Tomcat Security For Ubuntu16.04&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;一、权限&lt;/h2&gt;

&lt;h3 id=&quot;tomcat&quot;&gt;1.1 创建tomcat用户&lt;/h3&gt;

&lt;p&gt;为了提高系统安全，tomcat不应该使用root运行。为它创建一个新用户和组。
创建一个tomcat组：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo groupadd tomcat
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;创建一个叫tomcat的用户：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;tomcat用户属于tomcat组，家目录是&lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/tomcat&lt;/code&gt;，我要把tomcat安装在这个目录。&lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/false&lt;/code&gt;代表这个用户是不能登录的。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;1.2 更改权限&lt;/h3&gt;

&lt;p&gt;赋给tomcat用户各种权限：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /opt
sudo chgrp -R tomcat tomcat

cd /opt/tomcat
sudo chgrp -R tomcat conf
sudo chmod g+rwx conf
sudo chmod g+r conf/*

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改各种目录的所有者：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /opt
sudo chown -R tomcat tomcat

cd /opt/tomcat
sudo chown -R tomcat webapps/ work/ temp/ logs/ bin/ lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;1.3 配置定时登出&lt;/h3&gt;

&lt;p&gt;如果使用启用了Tomcat用户，则需要设置Tomcat定时登出，将&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME\conf\server.xml&lt;/code&gt;配置如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;
           connectionTimeout=&quot;20000&quot;
           redirectPort=&quot;8443&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-3&quot;&gt;二、配置开机启动&lt;/h2&gt;

&lt;p&gt;我们需要把tomcat配置为服务，为了做到这一点，需要创建systemd服务配置文件。&lt;/p&gt;

&lt;p&gt;使用下面命令查看Java安装路径：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo update-java-alternatives -l
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在在&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/systemd/system&lt;/code&gt;目录创建服务文件tomcat.service：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/systemd/system/tomcat.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;tomcat.service内容如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Apache Tomcat Web Application Container
After=network.target
 
[Service]
Type=forking
 
Environment=JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre
Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
Environment=CATALINA_HOME=/opt/tomcat
Environment=CATALINA_BASE=/opt/tomcat
Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'
Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'
 
ExecStart=/opt/tomcat/bin/startup.sh
ExecStop=/opt/tomcat/bin/shutdown.sh
 
User=tomcat
Group=tomcat
 
[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;替换JAVA_HOME的值，注意在路径后加jre；上面配置内存要根据需要修改。&lt;/p&gt;

&lt;p&gt;修改完成之后，重新加载systemd：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动tomcat：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl enable tomcat
sudo systemctl start tomcat
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;确认tomcat启动状态：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl status tomcat
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/wD55zo0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;三、安全加固配置&lt;/h2&gt;

&lt;h3 id=&quot;section-5&quot;&gt;3.1 删除应用包&lt;/h3&gt;

&lt;p&gt;除了需要部署上去的应用，其余位于&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME\webapps&lt;/code&gt;文件夹中的应用如docs、examples、host-manager、manager和ROOT，若无业务必要，请执行删除上述的应用包。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm -rf docs/ examples/ host-manager/ manager/ ROOT/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;tomcat-1&quot;&gt;3.2 禁止Tomcat目录列表&lt;/h3&gt;

&lt;p&gt;确保&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME\conf\web.xml&lt;/code&gt;中listings的值为false：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;init-param&amp;gt;
    &amp;lt;param-name&amp;gt;listings&amp;lt;/param-name&amp;gt;
    &amp;lt;param-value&amp;gt;false&amp;lt;/param-value&amp;gt;
&amp;lt;/init-param&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;cookiehttponly&quot;&gt;3.3 设置Cookie的HttpOnly属性&lt;/h3&gt;

&lt;p&gt;如果您在cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XSS攻击。&lt;/p&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME\conf\context.xml&lt;/code&gt;文件中添加&lt;code class=&quot;highlighter-rouge&quot;&gt;useHttpOnly=&quot;true&quot;&lt;/code&gt;配置如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Context useHttpOnly=&quot;true&quot;&amp;gt;
    &amp;lt;WatchedResource&amp;gt;WEB-INF/web.xml&amp;lt;/WatchedResource&amp;gt;
    &amp;lt;WatchedResource&amp;gt;${catalina.base}/conf/web.xml&amp;lt;/WatchedResource&amp;gt;
&amp;lt;/Context&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;进入项目路径找到web.xml：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@yazid-chen:/opt/tomcat/webapps/api/WEB-INF# vim web.xml 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;加入http-only配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;session-config&amp;gt;
      &amp;lt;session-timeout&amp;gt;30&amp;lt;/session-timeout&amp;gt;
      &amp;lt;cookie-config&amp;gt;
            &amp;lt;http-only&amp;gt;true&amp;lt;/http-only&amp;gt;
            &amp;lt;secure&amp;gt;true&amp;lt;/secure&amp;gt;
      &amp;lt;/cookie-config&amp;gt;
&amp;lt;/session-config&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;shutdown&quot;&gt;3.4 配置shutdown端口&lt;/h3&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME\conf\server.xml&lt;/code&gt;中有&lt;code class=&quot;highlighter-rouge&quot;&gt;“&amp;lt;Server port=&quot;8005&quot; shutdown=&quot;SHUTDOWN&quot;&amp;gt;”&lt;/code&gt;的配置。&lt;/p&gt;

&lt;p&gt;任何人只要telnet到服务器的8005端口，输入”SHUTDOWN”，然后回车，服务器立即就被关掉了。&lt;/p&gt;

&lt;p&gt;从安全的角度上考虑，需要把这个shutdown指令改成一个别人不容易猜测的字符串。而且这个修改不影响shutdown.bat或shutdown.sh的执行。&lt;/p&gt;

&lt;p&gt;配置如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Serverport=&quot;未被占用的端口&quot; shutdown=&quot;较为复杂的字符串&quot;&amp;gt;
#注：配置的端口需要大于1024。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;tomcat-2&quot;&gt;3.5 隐藏Tomcat版本信息&lt;/h3&gt;

&lt;p&gt;在默认配置下，当应用出现异常时，客户端会显示Tomcat的版本信息。攻击者可以根据Tomcat版本信息选择漏洞库攻击，所以需要将Tomcat的版本信息隐藏，解压&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME\lib\catalina.jar&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@yazid-chen:/opt/tomcat/lib# jar xf catalina.jar 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将&lt;code class=&quot;highlighter-rouge&quot;&gt;\org\apache\catalina\util&lt;/code&gt;中的配置ServerInfo.properties如下,info和number随意：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server.info=Server
server.number=Y
server.built=Jul 4 2016 18:22:47 UTC

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;war&quot;&gt;3.6 关闭war自动部署&lt;/h3&gt;

&lt;p&gt;默认的配置war放在&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME\webapps&lt;/code&gt;中会自动部署，所以关闭war自动部署防止被植入木马等恶意程序。将&lt;code class=&quot;highlighter-rouge&quot;&gt;$CATALINA_HOME\conf\server.xml&lt;/code&gt;配置如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;
      unpackWARs=&quot;false&quot; autoDeploy=&quot;false&quot;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ajp&quot;&gt;3.7 管理AJP端口&lt;/h3&gt;

&lt;p&gt;AJP是为 Tomcat 与 HTTP 服务器之间通信而定制的协议，能提供较高的通信速度和效率。如果tomcat前端放的是apache的时候，会使用到AJP这个连接器。如果用nginx做的反向代理，因此不使用此连接器，因此需要注销掉该连接器。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!--
    &amp;lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&amp;gt;
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;tomcat-3&quot;&gt;3.8 用普通用户启动Tomcat&lt;/h3&gt;

&lt;p&gt;用root用户启动tomcat有一个严重的问题，那就是tomcat具有root权限。这意味着你的任何一个jsp脚本都具有root权限，所以可以轻易地用jsp脚本删除你整个硬盘里的东西！所以我们最好不要使用root启动tomcat。&lt;/p&gt;

&lt;p&gt;权限修改见上文1.2所示。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#查看由哪个用户启动
ps aux | grep tomcat 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/24sEcMq.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;参考&lt;/h2&gt;

&lt;p&gt;本文参考以下文章，在此对原作者表示感谢！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.topspeedsnail.com/archives/4551&quot;&gt;Ubuntu 16.04安装Tomcat 8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.51itong.net/tomcat-4687.html&quot;&gt;Tomcat安全加固配置手册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tuicool.com/articles/BRF732f&quot;&gt;Tomcat 安全配置与性能优化&lt;/a&gt;&lt;/p&gt;</content><author><name>YazidChen</name></author><summary>Tomcat Security For Ubuntu16.04</summary></entry><entry><title>Win环境Jekyll+Markdown+Github Pages搭建个人Blogs</title><link href="yazidchen.github.io/2016/08/19/CreateBlogsForJekyllOnGithub/" rel="alternate" type="text/html" title="Win环境Jekyll+Markdown+Github Pages搭建个人Blogs" /><published>2016-08-19T00:00:00+00:00</published><updated>2016-08-19T00:00:00+00:00</updated><id>yazidchen.github.io/2016/08/19/CreateBlogsForJekyllOnGithub</id><content type="html" xml:base="yazidchen.github.io/2016/08/19/CreateBlogsForJekyllOnGithub/">&lt;h2 id=&quot;github-pages&quot;&gt;开启Github Pages&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt;在github中建立一个基于你的用户名的repository&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/pJBemgT.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2、&lt;/strong&gt;进入仓库 -&amp;gt; Setting -&amp;gt;找到Launch automatic page generator进入&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/NX82S2v.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3、&lt;/strong&gt;此时相当于一篇博客页，填入必要的字段后，点击Continue to layouts&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4、&lt;/strong&gt;选样式 -&amp;gt; Publish page&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5、&lt;/strong&gt;之后，你就能在Setting的GitHub Pages下看到你的地址了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/RhpshMR.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;部署Jekyll&lt;/h2&gt;

&lt;h3 id=&quot;rubyrubygems&quot;&gt;安装Ruby、RubyGems&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt;下载&lt;a href=&quot;http://rubyinstaller.org/downloads/&quot; title=&quot;RubyInstallers&quot;&gt;http://rubyinstaller.org/downloads/&lt;/a&gt;安装&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2、&lt;/strong&gt;配置环境变量：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;RUBY_HOME=D:\OfficeSoft\Ruby23-x64（目录地址）&lt;/li&gt;
  &lt;li&gt;在Path中添加 %RUBY_HOME%\bin&lt;/li&gt;
  &lt;li&gt;进cmd， &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby -v&lt;/code&gt;，如果显示ruby版本信息说明安装成功。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3、&lt;/strong&gt;安装rubyGems&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd d:\OfficeSoft\rubygems-2.6.6&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ruby setup.rb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jekyll-1&quot;&gt;安装Jekyll&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;blog&quot;&gt;创建本地blog站点&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;cd进入想要存放blog的目录&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new YazidChen.Github.io&lt;/code&gt;（目录名自拟）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;开启站点服务&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekll serve&lt;/code&gt; 开启服务。可能会报错，一般为缺少包，根据报错做相应处理&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install bundler
gem install minima
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;minima报错时，在\Ruby23-x64\lib\ruby\gems\2.3.0\gems\jekyll-3.2.1\lib\jekyll目录下找到layout.rb，进行如下操作&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Replace Line 38 with:

@path = base + &quot;/&quot; + name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;目录解读&lt;/h3&gt;

&lt;p&gt;刚生成的YazidChen.Github.io下存在以下结构&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/xCQ3uNM.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;.sass-cache	-&amp;gt;	sass编译缓存文件的目录&lt;/li&gt;
  &lt;li&gt;_posts		-&amp;gt;	存放博文的目录，博文文件类型必须为markdown，文件名统一格式：YEAR-MONTH-DAY-TITLE，如&lt;code class=&quot;highlighter-rouge&quot;&gt;2016-08-19-welcome-to-jekyll.markdown&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;2016-08-19-welcome-to-jekyll.md&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;_site		-&amp;gt;	Jekyll解析完整个网站,会将源代码存在此目录&lt;/li&gt;
  &lt;li&gt;_config.yml	-&amp;gt;	Jekyll的配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jekyll-2&quot;&gt;使用Jekyll写博文&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;把仓库克隆到本地&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt;下载&lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2、&lt;/strong&gt;克隆仓库到本地&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/iyNOqSe.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3、&lt;/strong&gt;拷贝本地Jekyll创建的YazidChen.Github.io的所有子目录及文件到本地仓库中的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4、&lt;/strong&gt;进入仓库启动jekyll&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/c2tOmeS.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5、&lt;/strong&gt;github 提交修改并同步&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;参考&lt;/h2&gt;

&lt;p&gt;本文参考以下文章，在此对原作者表示感谢！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyll.bootcss.com/docs/home/&quot;&gt;jekyll 中文文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home/&quot;&gt;jekyll English Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pwnny.cn/original/2016/06/26/MakeBlog.html&quot;&gt;Jekyll和Github搭建个人静态博客&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://kresnik.wang/works/tech/2015/06/07/%E5%9C%A8github-pages%E7%BD%91%E7%AB%99%E4%B8%8B%E7%94%A8jekyll%E5%88%B6%E4%BD%9C%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B.html&quot;&gt;在github pages网站下用jekyll制作博客教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pizida.com/technology/2016/03/03/use-jekyll-create-blog-on-github/&quot;&gt;Jekyll本地搭建开发环境以及Github部署流程&lt;/a&gt;&lt;/p&gt;</content><author><name>YazidChen</name></author><summary>开启Github Pages</summary></entry></feed>
